{"ast":null,"code":"import _classCallCheck from \"/Users/aarav/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aarav/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aarav/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aarav/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aarav/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aarav/my-app/src/stage1_lb_group.js\";\nimport React from 'react'; //import './index.css';\n\nimport { PieChart, Pie, Cell } from 'recharts';\nimport TestCode from \"./testcode\";\nimport axios from 'axios';\n\nvar StageOnelbgroup = /*#__PURE__*/function (_React$Component) {\n  _inherits(StageOnelbgroup, _React$Component);\n\n  function StageOnelbgroup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StageOnelbgroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StageOnelbgroup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      NPU0: {\n        group: '',\n        NPU: '',\n        maxEntries: null,\n        usedEntries: null,\n        percentUsage: null,\n        color: ''\n      },\n      NPU1: {\n        group: '',\n        NPU: '',\n        maxEntries: null,\n        usedEntries: null,\n        percentUsage: null,\n        color: ''\n      },\n      NPU2: {\n        group: '',\n        NPU: '',\n        maxEntries: null,\n        usedEntries: null,\n        percentUsage: null,\n        color: ''\n      },\n      // datapoints: []\n      datapoints: {}\n    };\n\n    _this.componentDidMount = function () {\n      _this.getData();\n    };\n\n    _this.getData = function () {\n      axios.get('//localhost:8080/api').then(function (response) {\n        var data = response.data; // this.setState({ datapoints: data });\n\n        _this.setState({\n          datapoints: data[0]\n        });\n\n        console.log('Data retrieved!');\n      }).catch(function () {\n        alert('Error retrieving data!!!');\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(StageOnelbgroup, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // let getNPU0Group = this.state.datapoints.map((el) => {return el.NPU0.group});\n      // let getNPU0NPU = this.state.datapoints.map((el) => {return el.NPU0.NPU});\n      // let getNPU0MaxEntries = this.state.datapoints.map((el) => {return el.NPU0.maxEntries});\n      // let getNPU0UsedEntries = this.state.datapoints.map((el) => {return el.NPU0.usedEntries});\n      // let getNPU0PercentUsage = this.state.datapoints.map((el) => {return el.NPU0.percentUsage});\n      // let getNPU0Color = this.state.datapoints.map((el) => {return el.NPU0.color});\n      // let getNPU1Group = this.state.datapoints.map((el) => {return el.NPU1.group});\n      // let getNPU1NPU = this.state.datapoints.map((el) => {return el.NPU1.NPU});\n      // let getNPU1MaxEntries = this.state.datapoints.map((el) => {return el.NPU1.maxEntries});\n      // let getNPU1UsedEntries = this.state.datapoints.map((el) => {return el.NPU1.usedEntries});\n      // let getNPU1PercentUsage = this.state.datapoints.map((el) => {return el.NPU1.percentUsage});\n      // let getNPU1Color = this.state.datapoints.map((el) => {return el.NPU1.color});\n      // let getNPU2Group = this.state.datapoints.map((el) => {return el.NPU2.group});\n      // let getNPU2NPU = this.state.datapoints.map((el) => {return el.NPU2.NPU});\n      // let getNPU2MaxEntries = this.state.datapoints.map((el) => {return el.NPU2.maxEntries});\n      // let getNPU2UsedEntries = this.state.datapoints.map((el) => {return el.NPU2.usedEntries});\n      // let getNPU2PercentUsage = this.state.datapoints.map((el) => {return el.NPU2.percentUsage});\n      // let getNPU2Color = this.state.datapoints.map((el) => {return el.NPU2.color});\n      // let getNPU3Group = this.state.datapoints.map((el) => {return el.NPU3.group});\n      // let getNPU3NPU = this.state.datapoints.map((el) => {return el.NPU3.NPU});\n      // let getNPU3MaxEntries = this.state.datapoints.map((el) => {return el.NPU3.maxEntries});\n      // let getNPU3UsedEntries = this.state.datapoints.map((el) => {return el.NPU3.usedEntries});\n      // let getNPU3PercentUsage = this.state.datapoints.map((el) => {return el.NPU3.percentUsage});\n      // let getNPU3Color = this.state.datapoints.map((el) => {return el.NPU3.color});\n      var routerInfoList = [{\n        group: getNPU0Group,\n        NPU: getNPU0NPU,\n        maxEntries: getNPU0MaxEntries,\n        usedEntries: getNPU0UsedEntries,\n        percentUsage: getNPU0PercentUsage,\n        color: getNPU0Color\n      }, {\n        group: getNPU1Group,\n        NPU: getNPU1NPU,\n        maxEntries: getNPU1MaxEntries,\n        usedEntries: getNPU1UsedEntries,\n        percentUsage: getNPU1PercentUsage,\n        color: getNPU1Color\n      }, {\n        group: getNPU2Group,\n        NPU: getNPU2NPU,\n        maxEntries: getNPU2MaxEntries,\n        usedEntries: getNPU2UsedEntries,\n        percentUsage: getNPU2PercentUsage,\n        color: getNPU2Color\n      }, {\n        group: getNPU3Group,\n        NPU: getNPU3NPU,\n        maxEntries: getNPU3MaxEntries,\n        usedEntries: getNPU3UsedEntries,\n        percentUsage: getNPU3PercentUsage,\n        color: getNPU3Color\n      }];\n\n      for (var i = 0; i < routerInfoList.length; i++) {\n        routerInfoList[i].percentUsage = routerInfoList[i].usedEntries / routerInfoList[i].maxEntries * 100;\n      }\n\n      for (var _i = 0; _i < routerInfoList.length; _i++) {\n        if (routerInfoList[_i].percentUsage >= 95) {\n          routerInfoList[_i].color = \"Red\";\n        }\n\n        if (routerInfoList[_i].percentUsage >= 80 && routerInfoList[_i].percentUsage < 95) {\n          routerInfoList[_i].color = \"Yellow\";\n        }\n\n        if (routerInfoList[_i].percentUsage >= 0 && routerInfoList[_i].percentUsage < 80) {\n          routerInfoList[_i].color = \"Green\";\n        }\n      }\n\n      var COLORS = ['red', 'green'];\n      var RADIAN = Math.PI / 180;\n\n      var renderCustomizedLabel = function renderCustomizedLabel(_ref) {\n        var cx = _ref.cx,\n            cy = _ref.cy,\n            midAngle = _ref.midAngle,\n            innerRadius = _ref.innerRadius,\n            outerRadius = _ref.outerRadius,\n            percent = _ref.percent,\n            index = _ref.index;\n        var radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n        var x = cx + radius * Math.cos(-midAngle * RADIAN);\n        var y = cy + radius * Math.sin(-midAngle * RADIAN);\n        return /*#__PURE__*/React.createElement(\"text\", {\n          x: x,\n          y: y,\n          fill: \"white\",\n          textAnchor: x > cx ? 'start' : 'end',\n          dominantBaseline: \"central\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 9\n          }\n        }, \"\".concat((percent * 100).toFixed(0), \"%\"));\n      };\n\n      var NPU0data = [{\n        name: \"Used\",\n        value: routerInfoList[0].percentUsage\n      }, {\n        name: \"Empty\",\n        value: 100 - routerInfoList[0].percentUsage\n      }];\n      var NPU1data = [{\n        name: \"Used\",\n        value: routerInfoList[1].percentUsage\n      }, {\n        name: \"Empty\",\n        value: 100 - routerInfoList[1].percentUsage\n      }];\n      var NPU2data = [{\n        name: \"Used\",\n        value: routerInfoList[2].percentUsage\n      }, {\n        name: \"Empty\",\n        value: 100 - routerInfoList[2].percentUsage\n      }];\n      var NPU3data = [{\n        name: \"Used\",\n        value: routerInfoList[3].percentUsage\n      }, {\n        name: \"Empty\",\n        value: 100 - routerInfoList[3].percentUsage\n      }];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(TestCode, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          'textAlign': 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }\n      }, \"stage1_lb_group\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }\n      }, \"NPU-0\"), /*#__PURE__*/React.createElement(PieChart, {\n        width: window.innerWidth,\n        height: 400,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Pie, {\n        data: NPU0data,\n        cx: \"50%\",\n        cy: \"50%\",\n        labelLine: false,\n        label: renderCustomizedLabel,\n        outerRadius: 200,\n        fill: \"#8884d8\",\n        dataKey: \"value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }\n      }, NPU0data.map(function (entry, index) {\n        return /*#__PURE__*/React.createElement(Cell, {\n          key: \"cell-\".concat(index),\n          fill: COLORS[index % COLORS.length],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }\n        });\n      }))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }\n      }, \"Usage State: \", routerInfoList[0].color), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }\n      }, \"There are \", routerInfoList[0].usedEntries, \" out of \", routerInfoList[0].maxEntries, \" items used.\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }\n      }, \"NPU-1\"), /*#__PURE__*/React.createElement(PieChart, {\n        width: window.innerWidth,\n        height: 400,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Pie, {\n        data: NPU1data,\n        cx: \"50%\",\n        cy: \"50%\",\n        labelLine: false,\n        label: renderCustomizedLabel,\n        outerRadius: 200,\n        fill: \"#8884d8\",\n        dataKey: \"value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }\n      }, NPU1data.map(function (entry, index) {\n        return /*#__PURE__*/React.createElement(Cell, {\n          key: \"cell-\".concat(index),\n          fill: COLORS[index % COLORS.length],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }\n        });\n      }))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }\n      }, \"Usage State: \", routerInfoList[1].color), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }\n      }, \"There are \", routerInfoList[1].usedEntries, \" out of \", routerInfoList[1].maxEntries, \" items used.\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }\n      }, \"NPU-2\"), /*#__PURE__*/React.createElement(PieChart, {\n        width: window.innerWidth,\n        height: 400,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Pie, {\n        data: NPU2data,\n        cx: \"50%\",\n        cy: \"50%\",\n        labelLine: false,\n        label: renderCustomizedLabel,\n        outerRadius: 200,\n        fill: \"#8884d8\",\n        dataKey: \"value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }\n      }, NPU2data.map(function (entry, index) {\n        return /*#__PURE__*/React.createElement(Cell, {\n          key: \"cell-\".concat(index),\n          fill: COLORS[index % COLORS.length],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }\n        });\n      }))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }\n      }, \"Usage State: \", routerInfoList[2].color), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }\n      }, \"There are \", routerInfoList[2].usedEntries, \" out of \", routerInfoList[2].maxEntries, \" items used.\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }\n      }, \"NPU-3\"), /*#__PURE__*/React.createElement(PieChart, {\n        width: window.innerWidth,\n        height: 400,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Pie, {\n        data: NPU3data,\n        cx: \"50%\",\n        cy: \"50%\",\n        labelLine: false,\n        label: renderCustomizedLabel,\n        outerRadius: 200,\n        fill: \"#8884d8\",\n        dataKey: \"value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }\n      }, NPU2data.map(function (entry, index) {\n        return /*#__PURE__*/React.createElement(Cell, {\n          key: \"cell-\".concat(index),\n          fill: COLORS[index % COLORS.length],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }\n        });\n      }))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }\n      }, \"Usage State: \", routerInfoList[3].color), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }\n      }, \"There are \", routerInfoList[3].usedEntries, \" out of \", routerInfoList[3].maxEntries, \" items used.\")));\n    }\n  }]);\n\n  return StageOnelbgroup;\n}(React.Component);\n\nexport default StageOnelbgroup;","map":{"version":3,"names":["React","PieChart","Pie","Cell","TestCode","axios","StageOnelbgroup","state","NPU0","group","NPU","maxEntries","usedEntries","percentUsage","color","NPU1","NPU2","datapoints","componentDidMount","getData","get","then","response","data","setState","console","log","catch","alert","routerInfoList","getNPU0Group","getNPU0NPU","getNPU0MaxEntries","getNPU0UsedEntries","getNPU0PercentUsage","getNPU0Color","getNPU1Group","getNPU1NPU","getNPU1MaxEntries","getNPU1UsedEntries","getNPU1PercentUsage","getNPU1Color","getNPU2Group","getNPU2NPU","getNPU2MaxEntries","getNPU2UsedEntries","getNPU2PercentUsage","getNPU2Color","getNPU3Group","getNPU3NPU","getNPU3MaxEntries","getNPU3UsedEntries","getNPU3PercentUsage","getNPU3Color","i","length","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","toFixed","NPU0data","name","value","NPU1data","NPU2data","NPU3data","window","innerWidth","map","entry","Component"],"sources":["/Users/aarav/my-app/src/stage1_lb_group.js"],"sourcesContent":["import React from 'react';\n//import './index.css';\nimport { PieChart, Pie, Cell } from 'recharts';\nimport TestCode from \"./testcode\";\nimport axios from 'axios';\n\nclass StageOnelbgroup extends React.Component {\n\n  state = {\n    NPU0: {\n      group: '',\n      NPU: '',\n      maxEntries: null,\n      usedEntries: null,\n      percentUsage: null,\n      color: ''\n    },\n    NPU1: {\n      group: '',\n      NPU: '',\n      maxEntries: null,\n      usedEntries: null,\n      percentUsage: null,\n      color: ''\n    },\n    NPU2: {\n      group: '',\n      NPU: '',\n      maxEntries: null,\n      usedEntries: null,\n      percentUsage: null,\n      color: ''\n    },\n    // datapoints: []\n    datapoints: {},\n  }\n    \n    \n  componentDidMount = () => {\n    this.getData();\n  };\n\n\n  getData = () => {\n    axios.get('//localhost:8080/api')\n      .then((response) => {\n        const data = response.data;\n        // this.setState({ datapoints: data });\n        this.setState({ datapoints: data[0] })\n        console.log('Data retrieved!');\n      })\n      .catch(() => {\n        alert('Error retrieving data!!!');\n      });\n  }\n\n  render() {\n\n    // let getNPU0Group = this.state.datapoints.map((el) => {return el.NPU0.group});\n    // let getNPU0NPU = this.state.datapoints.map((el) => {return el.NPU0.NPU});\n    // let getNPU0MaxEntries = this.state.datapoints.map((el) => {return el.NPU0.maxEntries});\n    // let getNPU0UsedEntries = this.state.datapoints.map((el) => {return el.NPU0.usedEntries});\n    // let getNPU0PercentUsage = this.state.datapoints.map((el) => {return el.NPU0.percentUsage});\n    // let getNPU0Color = this.state.datapoints.map((el) => {return el.NPU0.color});\n\n    // let getNPU1Group = this.state.datapoints.map((el) => {return el.NPU1.group});\n    // let getNPU1NPU = this.state.datapoints.map((el) => {return el.NPU1.NPU});\n    // let getNPU1MaxEntries = this.state.datapoints.map((el) => {return el.NPU1.maxEntries});\n    // let getNPU1UsedEntries = this.state.datapoints.map((el) => {return el.NPU1.usedEntries});\n    // let getNPU1PercentUsage = this.state.datapoints.map((el) => {return el.NPU1.percentUsage});\n    // let getNPU1Color = this.state.datapoints.map((el) => {return el.NPU1.color});\n\n    // let getNPU2Group = this.state.datapoints.map((el) => {return el.NPU2.group});\n    // let getNPU2NPU = this.state.datapoints.map((el) => {return el.NPU2.NPU});\n    // let getNPU2MaxEntries = this.state.datapoints.map((el) => {return el.NPU2.maxEntries});\n    // let getNPU2UsedEntries = this.state.datapoints.map((el) => {return el.NPU2.usedEntries});\n    // let getNPU2PercentUsage = this.state.datapoints.map((el) => {return el.NPU2.percentUsage});\n    // let getNPU2Color = this.state.datapoints.map((el) => {return el.NPU2.color});\n\n    // let getNPU3Group = this.state.datapoints.map((el) => {return el.NPU3.group});\n    // let getNPU3NPU = this.state.datapoints.map((el) => {return el.NPU3.NPU});\n    // let getNPU3MaxEntries = this.state.datapoints.map((el) => {return el.NPU3.maxEntries});\n    // let getNPU3UsedEntries = this.state.datapoints.map((el) => {return el.NPU3.usedEntries});\n    // let getNPU3PercentUsage = this.state.datapoints.map((el) => {return el.NPU3.percentUsage});\n    // let getNPU3Color = this.state.datapoints.map((el) => {return el.NPU3.color});\n\n    \n\n    const routerInfoList = [\n      {\n        group: getNPU0Group,\n        NPU: getNPU0NPU,\n        maxEntries: getNPU0MaxEntries,\n        usedEntries: getNPU0UsedEntries,\n        percentUsage: getNPU0PercentUsage,\n        color: getNPU0Color\n      },\n      {\n        group: getNPU1Group,\n        NPU: getNPU1NPU,\n        maxEntries: getNPU1MaxEntries,\n        usedEntries: getNPU1UsedEntries,\n        percentUsage: getNPU1PercentUsage,\n        color: getNPU1Color\n      },\n      {\n        group: getNPU2Group,\n        NPU: getNPU2NPU,\n        maxEntries: getNPU2MaxEntries,\n        usedEntries: getNPU2UsedEntries,\n        percentUsage: getNPU2PercentUsage,\n        color: getNPU2Color\n      },\n      {\n        group: getNPU3Group,\n        NPU: getNPU3NPU,\n        maxEntries: getNPU3MaxEntries,\n        usedEntries: getNPU3UsedEntries,\n        percentUsage: getNPU3PercentUsage,\n        color: getNPU3Color\n      }\n    ];\n\n    for (let i = 0; i < routerInfoList.length; i++) {\n      routerInfoList[i].percentUsage = (routerInfoList[i].usedEntries/routerInfoList[i].maxEntries)*100;\n    }\n    \n\n    for (let i = 0; i < routerInfoList.length; i++) {\n      if (routerInfoList[i].percentUsage >= 95) {\n        routerInfoList[i].color = \"Red\";\n      }\n      if (routerInfoList[i].percentUsage >= 80 && routerInfoList[i].percentUsage < 95) {\n\t      routerInfoList[i].color = \"Yellow\";\n      }\n      if (routerInfoList[i].percentUsage >= 0 && routerInfoList[i].percentUsage< 80) {\n        routerInfoList[i].color = \"Green\";\n      }\n    }\n\n\n    \n\n\n    const COLORS = ['red', 'green'];\n\n    const RADIAN = Math.PI / 180;\n    const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n      const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n      const x = cx + radius * Math.cos(-midAngle * RADIAN);\n      const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n      return (\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n          {`${(percent * 100).toFixed(0)}%`}\n        </text>\n      );\n    };\n\n    const NPU0data = [\n      { name: \"Used\", value: routerInfoList[0].percentUsage },\n      { name: \"Empty\", value: 100-routerInfoList[0].percentUsage}\n    ];\n    const NPU1data = [\n      { name: \"Used\", value: routerInfoList[1].percentUsage },\n      { name: \"Empty\", value: 100-routerInfoList[1].percentUsage}\n    ];\n    const NPU2data = [\n      { name: \"Used\", value: routerInfoList[2].percentUsage },\n      { name: \"Empty\", value: 100-routerInfoList[2].percentUsage}\n    ];\n    const NPU3data = [\n      { name: \"Used\", value: routerInfoList[3].percentUsage },\n      { name: \"Empty\", value: 100-routerInfoList[3].percentUsage}\n    ];\n\n    \n  \n    return (\n      <div>\n        <TestCode />\n        <div style={ { 'textAlign': 'center' } }>\n          <h1>stage1_lb_group</h1>\n          <h2>NPU-0</h2>\n        <PieChart width={window.innerWidth} height={400}>\n          <Pie\n            data={NPU0data}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            label={renderCustomizedLabel}\n            outerRadius={200}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n          >\n            {NPU0data.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n            ))}\n          </Pie>\n        </PieChart>\n          <p>Usage State: {routerInfoList[0].color}</p>\n          <p>There are {routerInfoList[0].usedEntries} out of {routerInfoList[0].maxEntries} items used.</p>\n          <h2>NPU-1</h2>\n        <PieChart width={window.innerWidth} height={400}>\n          <Pie\n            data={NPU1data}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            label={renderCustomizedLabel}\n            outerRadius={200}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n          >\n            {NPU1data.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n            ))}\n          </Pie>\n        </PieChart>\n          <p>Usage State: {routerInfoList[1].color}</p>\n          <p>There are {routerInfoList[1].usedEntries} out of {routerInfoList[1].maxEntries} items used.</p>\n          <h2>NPU-2</h2>\n        <PieChart width={window.innerWidth} height={400}>\n          <Pie\n            data={NPU2data}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            label={renderCustomizedLabel}\n            outerRadius={200}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n          >\n            {NPU2data.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n            ))}\n          </Pie>\n        </PieChart>\n          <p>Usage State: {routerInfoList[2].color}</p>\n          <p>There are {routerInfoList[2].usedEntries} out of {routerInfoList[2].maxEntries} items used.</p>\n          <h2>NPU-3</h2>\n        <PieChart width={window.innerWidth} height={400}>\n          <Pie\n            data={NPU3data}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            label={renderCustomizedLabel}\n            outerRadius={200}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n          >\n            {NPU2data.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n            ))}\n          </Pie>\n        </PieChart>\n          <p>Usage State: {routerInfoList[3].color}</p>\n          <p>There are {routerInfoList[3].usedEntries} out of {routerInfoList[3].maxEntries} items used.</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default StageOnelbgroup;\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}