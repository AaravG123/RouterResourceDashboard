{"ast":null,"code":"// const express = require('express');\n// const mongoose = require('mongoose');\n// const morgan = require('morgan');\n// const path = require('path');\n// const app = express();\n// const PORT = process.env.PORT || 8080;\n// const MONGODB_URI = 'mongodb+srv://mongodb:!BGN9-rwZm6mEj-@cluster0.t1nbj.mongodb.net/?retryWrites=true&w=majority';\n// mongoose.connect(MONGODB_URI || 'mongodb://localhost/mongodb', {\n//     useNewUrlParser: true,\n//     useUnifiedTopology: true\n// });\n// mongoose.connection.on('connected', () => {\n//     console.log('Mongoose is connected!');\n// });\n// const Schema = mongoose.Schema;\n// const DataSchema = new Schema({\n//     type: String,\n//     maxEntries: Number,\n//     usedEntries: Number,\n//     percentUsage: Number,\n//     color: String\n// });\n// const Data = mongoose.model('Data', DataSchema);\n// const data = {\n//     type: \"NPU-0\", \n//     maxEntries: 16384, \n//     usedEntries: 3000, \n//     percentUsage: null, \n//     color: \"\"\n// };\n// app.get('/api', (req, res) => {\n//     Data.find({  })\n//         .then((data) => {\n//             console.log('Data: ', data);\n//             res.json(data);\n//         })\n//         .catch((error) => {\n//             console.log('Error: ', daerrorta);\n//         })\n// });\n// app.use(morgan('tiny'));\n// app.listen(PORT, console.log(`Server is starting at ${PORT}`));\nconst mongoose = require('mongoose');\n\nconst Data = require(\"./models\");\n\nconst MONGODB_URI = 'mongodb+srv://mongodb:!BGN9-rwZm6mEj-@cluster0.t1nbj.mongodb.net/?retryWrites=true&w=majority';\nmongoose.connect(MONGODB_URI);\nexport const data = new Data({\n  //dataArray: {\n  group: \"stage1_lb_group\",\n  NPU: \"NPU-0\",\n  maxEntries: 16384,\n  usedEntries: 4000,\n  percentUsage: null,\n  color: \"\" //}\n\n});","map":{"version":3,"names":["mongoose","require","Data","MONGODB_URI","connect","data","group","NPU","maxEntries","usedEntries","percentUsage","color"],"sources":["/Users/aarav/my-app/src/server.js"],"sourcesContent":["// const express = require('express');\n// const mongoose = require('mongoose');\n// const morgan = require('morgan');\n// const path = require('path');\n\n// const app = express();\n// const PORT = process.env.PORT || 8080;\n\n// const MONGODB_URI = 'mongodb+srv://mongodb:!BGN9-rwZm6mEj-@cluster0.t1nbj.mongodb.net/?retryWrites=true&w=majority';\n\n// mongoose.connect(MONGODB_URI || 'mongodb://localhost/mongodb', {\n//     useNewUrlParser: true,\n//     useUnifiedTopology: true\n// });\n\n// mongoose.connection.on('connected', () => {\n//     console.log('Mongoose is connected!');\n// });\n\n// const Schema = mongoose.Schema;\n// const DataSchema = new Schema({\n//     type: String,\n//     maxEntries: Number,\n//     usedEntries: Number,\n//     percentUsage: Number,\n//     color: String\n\n// });\n\n// const Data = mongoose.model('Data', DataSchema);\n\n// const data = {\n//     type: \"NPU-0\", \n//     maxEntries: 16384, \n//     usedEntries: 3000, \n//     percentUsage: null, \n//     color: \"\"\n// };\n\n// app.get('/api', (req, res) => {\n//     Data.find({  })\n//         .then((data) => {\n//             console.log('Data: ', data);\n//             res.json(data);\n//         })\n//         .catch((error) => {\n//             console.log('Error: ', daerrorta);\n//         })\n// });\n\n// app.use(morgan('tiny'));\n\n// app.listen(PORT, console.log(`Server is starting at ${PORT}`));\n\nconst mongoose = require('mongoose');\nconst Data = require(\"./models\");\n\nconst MONGODB_URI = 'mongodb+srv://mongodb:!BGN9-rwZm6mEj-@cluster0.t1nbj.mongodb.net/?retryWrites=true&w=majority'\n\nmongoose.connect(MONGODB_URI);\n\nexport const data = new Data({\n    //dataArray: {\n        group: \"stage1_lb_group\",\n        NPU: \"NPU-0\", \n        maxEntries: 16384, \n        usedEntries: 4000, \n        percentUsage: null, \n        color: \"\"\n    //}\n})"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,UAAD,CAApB;;AAEA,MAAME,WAAW,GAAG,+FAApB;AAEAH,QAAQ,CAACI,OAAT,CAAiBD,WAAjB;AAEA,OAAO,MAAME,IAAI,GAAG,IAAIH,IAAJ,CAAS;EACzB;EACII,KAAK,EAAE,iBAFc;EAGrBC,GAAG,EAAE,OAHgB;EAIrBC,UAAU,EAAE,KAJS;EAKrBC,WAAW,EAAE,IALQ;EAMrBC,YAAY,EAAE,IANO;EAOrBC,KAAK,EAAE,EAPc,CAQzB;;AARyB,CAAT,CAAb"},"metadata":{},"sourceType":"module"}